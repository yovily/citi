name: Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags

permissions:
  contents: write # Needed for creating releases
  
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required for GoReleaser to work properly
          
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21' # Specify your Go version
          
      - name: Run Tests
        run: go test -v -race ./...
        
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Update Go Package Proxy
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          GOPROXY=proxy.golang.org go list -m github.com/${{ github.repository }}@${{ github.ref_name }}
          
  notify:
    needs: goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Notify on Success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const release = context.ref.replace('refs/tags/', '');
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: context.issue.number,
              body: `ðŸŽ‰ Release ${release} has been published successfully!`
            });

# You'll also need a .goreleaser.yaml in your root directory:
# .goreleaser.yaml
project_name: your-module-name
before:
  hooks:
    - go mod tidy
builds:
  - skip: true  # Skip binary builds for libraries
archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - Merge pull request
      - Merge branch